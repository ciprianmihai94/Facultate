<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>cmmdc</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>cmmdc</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>cmmdc</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>cmmdc</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><killingTest>Proiect1.teste.testareClaseEchivalenta(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>cmmdc</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>cmmdc</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><killingTest>Proiect1.teste.testareClaseEchivalenta(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><killingTest>Proiect1.teste.testareClaseEchivalenta(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><killingTest>Proiect1.teste.testareCategorii(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest>Proiect1.teste.testareCategorii(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><killingTest>Proiect1.teste.testareCategorii(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>numarPerechi</mutatedMethod><methodDescription>([I)I</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>prime_intre_ele</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><killingTest>Proiect1.teste.testareCategorii(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>prime_intre_ele</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><killingTest>Proiect1.teste.testareCategorii(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><killingTest>Proiect1.teste.testareCategorii(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><killingTest>Proiect1.teste.caiTestare(Proiect1.teste)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>verificareVector.java</sourceFile><mutatedClass>Proiect1.verificareVector</mutatedClass><mutatedMethod>verificare</mutatedMethod><methodDescription>(I[II)Z</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><killingTest/></mutation>
</mutations>
